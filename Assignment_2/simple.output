Terminals unused in grammar

    T_DECLARE
    T_INTEGER
    T_FLOAT


Rules useless in parser due to conflicts

   16 foreach: stmt

   22 repeat: l_expr

   24 else_stmt: T_ELSE stmt
   25          | %empty


State 17 conflicts: 1 shift/reduce
State 18 conflicts: 2 reduce/reduce
State 29 conflicts: 3 reduce/reduce
State 41 conflicts: 2 shift/reduce
State 45 conflicts: 1 shift/reduce
State 74 conflicts: 1 shift/reduce
State 75 conflicts: 6 reduce/reduce
State 88 conflicts: 1 shift/reduce, 6 reduce/reduce
State 91 conflicts: 6 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: stmt_list ';'

    2 stmt_list: stmt_list ';' stmt
    3          | stmt

    4 stmt: assignment
    5     | read
    6     | write
    7     | while
    8     | repeat
    9     | block
   10     | foreach
   11     | if_stmt

   12 block: T_BEGIN stmt_list T_END

   13 foreach: T_FOREACH
   14        | T_IN
   15        | '(' ':' ')'
   16        | stmt

   17 while: T_WHILE
   18      | l_expr

   19 repeat: stmt_list
   20       | T_REPEAT
   21       | T_UNTIL
   22       | l_expr

   23 if_stmt: T_IF '(' l_expr ')' T_THEN stmt else_stmt

   24 else_stmt: T_ELSE stmt
   25          | %empty

   26 assignment: varref T_ASSIGN l_expr

   27 a_expr: a_expr T_ADD a_term
   28       | a_expr T_SUB a_term
   29       | a_term

   30 a_term: a_term T_MUL a_fact
   31       | a_term T_DIV a_fact
   32       | a_fact

   33 a_fact: varref
   34       | T_NUM
   35       | T_LITERAL_STR
   36       | T_SUB a_fact
   37       | '(' a_fact ')'

   38 varref: T_ID
   39       | '[' T_ID ']'

   40 l_expr: l_expr T_AND l_term
   41       | l_term

   42 l_term: l_term T_OR l_fact
   43       | l_fact

   44 l_fact: a_expr oprel a_expr
   45       | a_expr
   46       | '(' l_expr ')'

   47 oprel: T_LT
   48      | T_GT
   49      | T_LEQ
   50      | T_GEQ
   51      | T_EQ
   52      | T_NEQ

   53 read: T_READ varlist

   54 write: T_WRITE expr_list

   55 varlist: varref
   56        | varref ',' varref

   57 expr_list: a_expr
   58          | a_expr ',' a_expr


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 15 23 37 46
    ')' (41) 15 23 37 46
    ',' (44) 56 58
    ':' (58) 15
    ';' (59) 1 2
    '[' (91) 39
    ']' (93) 39
    error (256)
    T_ID (258) 38 39
    T_NUM (259) 34
    T_ADD (260) 27
    T_SUB (261) 28 36
    T_MUL (262) 30
    T_DIV (263) 31
    T_LT (264) 47
    T_GT (265) 48
    T_LEQ (266) 49
    T_GEQ (267) 50
    T_EQ (268) 51
    T_NEQ (269) 52
    T_AND (270) 40
    T_OR (271) 42
    T_READ (272) 53
    T_WRITE (273) 54
    T_ASSIGN (274) 26
    T_BEGIN (275) 12
    T_END (276) 12
    T_FOREACH (277) 13
    T_IN (278) 14
    T_REPEAT (279) 20
    T_UNTIL (280) 21
    T_WHILE (281) 17
    T_IF (282) 23
    T_THEN (283) 23
    T_ELSE (284) 24
    T_DECLARE (285)
    T_INTEGER (286)
    T_FLOAT (287)
    T_LITERAL_STR (288) 35


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    program (42)
        on left: 1
        on right: 0
    stmt_list (43)
        on left: 2 3
        on right: 1 2 12 19
    stmt (44)
        on left: 4 5 6 7 8 9 10 11
        on right: 2 3 16 23 24
    block (45)
        on left: 12
        on right: 9
    foreach (46)
        on left: 13 14 15 16
        on right: 10
    while (47)
        on left: 17 18
        on right: 7
    repeat (48)
        on left: 19 20 21 22
        on right: 8
    if_stmt (49)
        on left: 23
        on right: 11
    else_stmt (50)
        on left: 24 25
        on right: 23
    assignment (51)
        on left: 26
        on right: 4
    a_expr (52)
        on left: 27 28 29
        on right: 27 28 44 45 57 58
    a_term (53)
        on left: 30 31 32
        on right: 27 28 29 30 31
    a_fact (54)
        on left: 33 34 35 36 37
        on right: 30 31 32 36 37
    varref (55)
        on left: 38 39
        on right: 26 33 55 56
    l_expr (56)
        on left: 40 41
        on right: 18 22 23 26 40 46
    l_term (57)
        on left: 42 43
        on right: 40 41 42
    l_fact (58)
        on left: 44 45 46
        on right: 42 43
    oprel (59)
        on left: 47 48 49 50 51 52
        on right: 44
    read (60)
        on left: 53
        on right: 5
    write (61)
        on left: 54
        on right: 6
    varlist (62)
        on left: 55 56
        on right: 53
    expr_list (63)
        on left: 57 58
        on right: 54


State 0

    0 $accept: . program $end

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 2
    T_SUB          shift, and go to state 3
    T_READ         shift, and go to state 4
    T_WRITE        shift, and go to state 5
    T_BEGIN        shift, and go to state 6
    T_FOREACH      shift, and go to state 7
    T_IN           shift, and go to state 8
    T_REPEAT       shift, and go to state 9
    T_UNTIL        shift, and go to state 10
    T_WHILE        shift, and go to state 11
    T_IF           shift, and go to state 12
    T_LITERAL_STR  shift, and go to state 13
    '('            shift, and go to state 14
    '['            shift, and go to state 15

    program     go to state 16
    stmt_list   go to state 17
    stmt        go to state 18
    block       go to state 19
    foreach     go to state 20
    while       go to state 21
    repeat      go to state 22
    if_stmt     go to state 23
    assignment  go to state 24
    a_expr      go to state 25
    a_term      go to state 26
    a_fact      go to state 27
    varref      go to state 28
    l_expr      go to state 29
    l_term      go to state 30
    l_fact      go to state 31
    read        go to state 32
    write       go to state 33


State 1

   38 varref: T_ID .

    $default  reduce using rule 38 (varref)


State 2

   34 a_fact: T_NUM .

    $default  reduce using rule 34 (a_fact)


State 3

   36 a_fact: T_SUB . a_fact

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 2
    T_SUB          shift, and go to state 3
    T_LITERAL_STR  shift, and go to state 13
    '('            shift, and go to state 34
    '['            shift, and go to state 15

    a_fact  go to state 35
    varref  go to state 36


State 4

   53 read: T_READ . varlist

    T_ID  shift, and go to state 1
    '['   shift, and go to state 15

    varref   go to state 37
    varlist  go to state 38


State 5

   54 write: T_WRITE . expr_list

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 2
    T_SUB          shift, and go to state 3
    T_LITERAL_STR  shift, and go to state 13
    '('            shift, and go to state 34
    '['            shift, and go to state 15

    a_expr     go to state 39
    a_term     go to state 26
    a_fact     go to state 27
    varref     go to state 36
    expr_list  go to state 40


State 6

   12 block: T_BEGIN . stmt_list T_END

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 2
    T_SUB          shift, and go to state 3
    T_READ         shift, and go to state 4
    T_WRITE        shift, and go to state 5
    T_BEGIN        shift, and go to state 6
    T_FOREACH      shift, and go to state 7
    T_IN           shift, and go to state 8
    T_REPEAT       shift, and go to state 9
    T_UNTIL        shift, and go to state 10
    T_WHILE        shift, and go to state 11
    T_IF           shift, and go to state 12
    T_LITERAL_STR  shift, and go to state 13
    '('            shift, and go to state 14
    '['            shift, and go to state 15

    stmt_list   go to state 41
    stmt        go to state 18
    block       go to state 19
    foreach     go to state 20
    while       go to state 21
    repeat      go to state 22
    if_stmt     go to state 23
    assignment  go to state 24
    a_expr      go to state 25
    a_term      go to state 26
    a_fact      go to state 27
    varref      go to state 28
    l_expr      go to state 29
    l_term      go to state 30
    l_fact      go to state 31
    read        go to state 32
    write       go to state 33


State 7

   13 foreach: T_FOREACH .

    $default  reduce using rule 13 (foreach)


State 8

   14 foreach: T_IN .

    $default  reduce using rule 14 (foreach)


State 9

   20 repeat: T_REPEAT .

    $default  reduce using rule 20 (repeat)


State 10

   21 repeat: T_UNTIL .

    $default  reduce using rule 21 (repeat)


State 11

   17 while: T_WHILE .

    $default  reduce using rule 17 (while)


State 12

   23 if_stmt: T_IF . '(' l_expr ')' T_THEN stmt else_stmt

    '('  shift, and go to state 42


State 13

   35 a_fact: T_LITERAL_STR .

    $default  reduce using rule 35 (a_fact)


State 14

   15 foreach: '(' . ':' ')'
   37 a_fact: '(' . a_fact ')'
   46 l_fact: '(' . l_expr ')'

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 2
    T_SUB          shift, and go to state 3
    T_LITERAL_STR  shift, and go to state 13
    '('            shift, and go to state 43
    ':'            shift, and go to state 44
    '['            shift, and go to state 15

    a_expr  go to state 25
    a_term  go to state 26
    a_fact  go to state 45
    varref  go to state 36
    l_expr  go to state 46
    l_term  go to state 30
    l_fact  go to state 31


State 15

   39 varref: '[' . T_ID ']'

    T_ID  shift, and go to state 47


State 16

    0 $accept: program . $end

    $end  shift, and go to state 48


State 17

    1 program: stmt_list . ';'
    2 stmt_list: stmt_list . ';' stmt
   19 repeat: stmt_list .

    ';'  shift, and go to state 49

    ';'  [reduce using rule 19 (repeat)]


State 18

    3 stmt_list: stmt .
   16 foreach: stmt .

    T_END     reduce using rule 3 (stmt_list)
    T_END     [reduce using rule 16 (foreach)]
    ';'       reduce using rule 3 (stmt_list)
    ';'       [reduce using rule 16 (foreach)]
    $default  reduce using rule 3 (stmt_list)


State 19

    9 stmt: block .

    $default  reduce using rule 9 (stmt)


State 20

   10 stmt: foreach .

    $default  reduce using rule 10 (stmt)


State 21

    7 stmt: while .

    $default  reduce using rule 7 (stmt)


State 22

    8 stmt: repeat .

    $default  reduce using rule 8 (stmt)


State 23

   11 stmt: if_stmt .

    $default  reduce using rule 11 (stmt)


State 24

    4 stmt: assignment .

    $default  reduce using rule 4 (stmt)


State 25

   27 a_expr: a_expr . T_ADD a_term
   28       | a_expr . T_SUB a_term
   44 l_fact: a_expr . oprel a_expr
   45       | a_expr .

    T_ADD  shift, and go to state 50
    T_SUB  shift, and go to state 51
    T_LT   shift, and go to state 52
    T_GT   shift, and go to state 53
    T_LEQ  shift, and go to state 54
    T_GEQ  shift, and go to state 55
    T_EQ   shift, and go to state 56
    T_NEQ  shift, and go to state 57

    $default  reduce using rule 45 (l_fact)

    oprel  go to state 58


State 26

   29 a_expr: a_term .
   30 a_term: a_term . T_MUL a_fact
   31       | a_term . T_DIV a_fact

    T_MUL  shift, and go to state 59
    T_DIV  shift, and go to state 60

    $default  reduce using rule 29 (a_expr)


State 27

   32 a_term: a_fact .

    $default  reduce using rule 32 (a_term)


State 28

   26 assignment: varref . T_ASSIGN l_expr
   33 a_fact: varref .

    T_ASSIGN  shift, and go to state 61

    $default  reduce using rule 33 (a_fact)


State 29

   18 while: l_expr .
   22 repeat: l_expr .
   40 l_expr: l_expr . T_AND l_term

    T_AND  shift, and go to state 62

    T_END     reduce using rule 18 (while)
    T_END     [reduce using rule 22 (repeat)]
    T_ELSE    reduce using rule 18 (while)
    T_ELSE    [reduce using rule 22 (repeat)]
    ';'       reduce using rule 18 (while)
    ';'       [reduce using rule 22 (repeat)]
    $default  reduce using rule 18 (while)


State 30

   41 l_expr: l_term .
   42 l_term: l_term . T_OR l_fact

    T_OR  shift, and go to state 63

    $default  reduce using rule 41 (l_expr)


State 31

   43 l_term: l_fact .

    $default  reduce using rule 43 (l_term)


State 32

    5 stmt: read .

    $default  reduce using rule 5 (stmt)


State 33

    6 stmt: write .

    $default  reduce using rule 6 (stmt)


State 34

   37 a_fact: '(' . a_fact ')'

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 2
    T_SUB          shift, and go to state 3
    T_LITERAL_STR  shift, and go to state 13
    '('            shift, and go to state 34
    '['            shift, and go to state 15

    a_fact  go to state 64
    varref  go to state 36


State 35

   36 a_fact: T_SUB a_fact .

    $default  reduce using rule 36 (a_fact)


State 36

   33 a_fact: varref .

    $default  reduce using rule 33 (a_fact)


State 37

   55 varlist: varref .
   56        | varref . ',' varref

    ','  shift, and go to state 65

    $default  reduce using rule 55 (varlist)


State 38

   53 read: T_READ varlist .

    $default  reduce using rule 53 (read)


State 39

   27 a_expr: a_expr . T_ADD a_term
   28       | a_expr . T_SUB a_term
   57 expr_list: a_expr .
   58          | a_expr . ',' a_expr

    T_ADD  shift, and go to state 50
    T_SUB  shift, and go to state 51
    ','    shift, and go to state 66

    $default  reduce using rule 57 (expr_list)


State 40

   54 write: T_WRITE expr_list .

    $default  reduce using rule 54 (write)


State 41

    2 stmt_list: stmt_list . ';' stmt
   12 block: T_BEGIN stmt_list . T_END
   19 repeat: stmt_list .

    T_END  shift, and go to state 67
    ';'    shift, and go to state 68

    T_END  [reduce using rule 19 (repeat)]
    ';'    [reduce using rule 19 (repeat)]


State 42

   23 if_stmt: T_IF '(' . l_expr ')' T_THEN stmt else_stmt

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 2
    T_SUB          shift, and go to state 3
    T_LITERAL_STR  shift, and go to state 13
    '('            shift, and go to state 43
    '['            shift, and go to state 15

    a_expr  go to state 25
    a_term  go to state 26
    a_fact  go to state 27
    varref  go to state 36
    l_expr  go to state 69
    l_term  go to state 30
    l_fact  go to state 31


State 43

   37 a_fact: '(' . a_fact ')'
   46 l_fact: '(' . l_expr ')'

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 2
    T_SUB          shift, and go to state 3
    T_LITERAL_STR  shift, and go to state 13
    '('            shift, and go to state 43
    '['            shift, and go to state 15

    a_expr  go to state 25
    a_term  go to state 26
    a_fact  go to state 45
    varref  go to state 36
    l_expr  go to state 46
    l_term  go to state 30
    l_fact  go to state 31


State 44

   15 foreach: '(' ':' . ')'

    ')'  shift, and go to state 70


State 45

   32 a_term: a_fact .
   37 a_fact: '(' a_fact . ')'

    ')'  shift, and go to state 71

    ')'       [reduce using rule 32 (a_term)]
    $default  reduce using rule 32 (a_term)


State 46

   40 l_expr: l_expr . T_AND l_term
   46 l_fact: '(' l_expr . ')'

    T_AND  shift, and go to state 62
    ')'    shift, and go to state 72


State 47

   39 varref: '[' T_ID . ']'

    ']'  shift, and go to state 73


State 48

    0 $accept: program $end .

    $default  accept


State 49

    1 program: stmt_list ';' .
    2 stmt_list: stmt_list ';' . stmt

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 2
    T_SUB          shift, and go to state 3
    T_READ         shift, and go to state 4
    T_WRITE        shift, and go to state 5
    T_BEGIN        shift, and go to state 6
    T_FOREACH      shift, and go to state 7
    T_IN           shift, and go to state 8
    T_REPEAT       shift, and go to state 9
    T_UNTIL        shift, and go to state 10
    T_WHILE        shift, and go to state 11
    T_IF           shift, and go to state 12
    T_LITERAL_STR  shift, and go to state 13
    '('            shift, and go to state 14
    '['            shift, and go to state 15

    $default  reduce using rule 1 (program)

    stmt_list   go to state 74
    stmt        go to state 75
    block       go to state 19
    foreach     go to state 20
    while       go to state 21
    repeat      go to state 22
    if_stmt     go to state 23
    assignment  go to state 24
    a_expr      go to state 25
    a_term      go to state 26
    a_fact      go to state 27
    varref      go to state 28
    l_expr      go to state 29
    l_term      go to state 30
    l_fact      go to state 31
    read        go to state 32
    write       go to state 33


State 50

   27 a_expr: a_expr T_ADD . a_term

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 2
    T_SUB          shift, and go to state 3
    T_LITERAL_STR  shift, and go to state 13
    '('            shift, and go to state 34
    '['            shift, and go to state 15

    a_term  go to state 76
    a_fact  go to state 27
    varref  go to state 36


State 51

   28 a_expr: a_expr T_SUB . a_term

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 2
    T_SUB          shift, and go to state 3
    T_LITERAL_STR  shift, and go to state 13
    '('            shift, and go to state 34
    '['            shift, and go to state 15

    a_term  go to state 77
    a_fact  go to state 27
    varref  go to state 36


State 52

   47 oprel: T_LT .

    $default  reduce using rule 47 (oprel)


State 53

   48 oprel: T_GT .

    $default  reduce using rule 48 (oprel)


State 54

   49 oprel: T_LEQ .

    $default  reduce using rule 49 (oprel)


State 55

   50 oprel: T_GEQ .

    $default  reduce using rule 50 (oprel)


State 56

   51 oprel: T_EQ .

    $default  reduce using rule 51 (oprel)


State 57

   52 oprel: T_NEQ .

    $default  reduce using rule 52 (oprel)


State 58

   44 l_fact: a_expr oprel . a_expr

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 2
    T_SUB          shift, and go to state 3
    T_LITERAL_STR  shift, and go to state 13
    '('            shift, and go to state 34
    '['            shift, and go to state 15

    a_expr  go to state 78
    a_term  go to state 26
    a_fact  go to state 27
    varref  go to state 36


State 59

   30 a_term: a_term T_MUL . a_fact

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 2
    T_SUB          shift, and go to state 3
    T_LITERAL_STR  shift, and go to state 13
    '('            shift, and go to state 34
    '['            shift, and go to state 15

    a_fact  go to state 79
    varref  go to state 36


State 60

   31 a_term: a_term T_DIV . a_fact

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 2
    T_SUB          shift, and go to state 3
    T_LITERAL_STR  shift, and go to state 13
    '('            shift, and go to state 34
    '['            shift, and go to state 15

    a_fact  go to state 80
    varref  go to state 36


State 61

   26 assignment: varref T_ASSIGN . l_expr

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 2
    T_SUB          shift, and go to state 3
    T_LITERAL_STR  shift, and go to state 13
    '('            shift, and go to state 43
    '['            shift, and go to state 15

    a_expr  go to state 25
    a_term  go to state 26
    a_fact  go to state 27
    varref  go to state 36
    l_expr  go to state 81
    l_term  go to state 30
    l_fact  go to state 31


State 62

   40 l_expr: l_expr T_AND . l_term

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 2
    T_SUB          shift, and go to state 3
    T_LITERAL_STR  shift, and go to state 13
    '('            shift, and go to state 43
    '['            shift, and go to state 15

    a_expr  go to state 25
    a_term  go to state 26
    a_fact  go to state 27
    varref  go to state 36
    l_term  go to state 82
    l_fact  go to state 31


State 63

   42 l_term: l_term T_OR . l_fact

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 2
    T_SUB          shift, and go to state 3
    T_LITERAL_STR  shift, and go to state 13
    '('            shift, and go to state 43
    '['            shift, and go to state 15

    a_expr  go to state 25
    a_term  go to state 26
    a_fact  go to state 27
    varref  go to state 36
    l_fact  go to state 83


State 64

   37 a_fact: '(' a_fact . ')'

    ')'  shift, and go to state 71


State 65

   56 varlist: varref ',' . varref

    T_ID  shift, and go to state 1
    '['   shift, and go to state 15

    varref  go to state 84


State 66

   58 expr_list: a_expr ',' . a_expr

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 2
    T_SUB          shift, and go to state 3
    T_LITERAL_STR  shift, and go to state 13
    '('            shift, and go to state 34
    '['            shift, and go to state 15

    a_expr  go to state 85
    a_term  go to state 26
    a_fact  go to state 27
    varref  go to state 36


State 67

   12 block: T_BEGIN stmt_list T_END .

    $default  reduce using rule 12 (block)


State 68

    2 stmt_list: stmt_list ';' . stmt

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 2
    T_SUB          shift, and go to state 3
    T_READ         shift, and go to state 4
    T_WRITE        shift, and go to state 5
    T_BEGIN        shift, and go to state 6
    T_FOREACH      shift, and go to state 7
    T_IN           shift, and go to state 8
    T_REPEAT       shift, and go to state 9
    T_UNTIL        shift, and go to state 10
    T_WHILE        shift, and go to state 11
    T_IF           shift, and go to state 12
    T_LITERAL_STR  shift, and go to state 13
    '('            shift, and go to state 14
    '['            shift, and go to state 15

    stmt_list   go to state 74
    stmt        go to state 75
    block       go to state 19
    foreach     go to state 20
    while       go to state 21
    repeat      go to state 22
    if_stmt     go to state 23
    assignment  go to state 24
    a_expr      go to state 25
    a_term      go to state 26
    a_fact      go to state 27
    varref      go to state 28
    l_expr      go to state 29
    l_term      go to state 30
    l_fact      go to state 31
    read        go to state 32
    write       go to state 33


State 69

   23 if_stmt: T_IF '(' l_expr . ')' T_THEN stmt else_stmt
   40 l_expr: l_expr . T_AND l_term

    T_AND  shift, and go to state 62
    ')'    shift, and go to state 86


State 70

   15 foreach: '(' ':' ')' .

    $default  reduce using rule 15 (foreach)


State 71

   37 a_fact: '(' a_fact ')' .

    $default  reduce using rule 37 (a_fact)


State 72

   46 l_fact: '(' l_expr ')' .

    $default  reduce using rule 46 (l_fact)


State 73

   39 varref: '[' T_ID ']' .

    $default  reduce using rule 39 (varref)


State 74

    2 stmt_list: stmt_list . ';' stmt
   19 repeat: stmt_list .

    ';'  shift, and go to state 68

    ';'       [reduce using rule 19 (repeat)]
    $default  reduce using rule 19 (repeat)


State 75

    2 stmt_list: stmt_list ';' stmt .
    3          | stmt .
   16 foreach: stmt .

    T_END     reduce using rule 2 (stmt_list)
    T_END     [reduce using rule 3 (stmt_list)]
    T_END     [reduce using rule 16 (foreach)]
    T_ELSE    reduce using rule 2 (stmt_list)
    T_ELSE    [reduce using rule 3 (stmt_list)]
    T_ELSE    [reduce using rule 16 (foreach)]
    ';'       reduce using rule 2 (stmt_list)
    ';'       [reduce using rule 3 (stmt_list)]
    ';'       [reduce using rule 16 (foreach)]
    $default  reduce using rule 2 (stmt_list)


State 76

   27 a_expr: a_expr T_ADD a_term .
   30 a_term: a_term . T_MUL a_fact
   31       | a_term . T_DIV a_fact

    T_MUL  shift, and go to state 59
    T_DIV  shift, and go to state 60

    $default  reduce using rule 27 (a_expr)


State 77

   28 a_expr: a_expr T_SUB a_term .
   30 a_term: a_term . T_MUL a_fact
   31       | a_term . T_DIV a_fact

    T_MUL  shift, and go to state 59
    T_DIV  shift, and go to state 60

    $default  reduce using rule 28 (a_expr)


State 78

   27 a_expr: a_expr . T_ADD a_term
   28       | a_expr . T_SUB a_term
   44 l_fact: a_expr oprel a_expr .

    T_ADD  shift, and go to state 50
    T_SUB  shift, and go to state 51

    $default  reduce using rule 44 (l_fact)


State 79

   30 a_term: a_term T_MUL a_fact .

    $default  reduce using rule 30 (a_term)


State 80

   31 a_term: a_term T_DIV a_fact .

    $default  reduce using rule 31 (a_term)


State 81

   26 assignment: varref T_ASSIGN l_expr .
   40 l_expr: l_expr . T_AND l_term

    T_AND  shift, and go to state 62

    $default  reduce using rule 26 (assignment)


State 82

   40 l_expr: l_expr T_AND l_term .
   42 l_term: l_term . T_OR l_fact

    T_OR  shift, and go to state 63

    $default  reduce using rule 40 (l_expr)


State 83

   42 l_term: l_term T_OR l_fact .

    $default  reduce using rule 42 (l_term)


State 84

   56 varlist: varref ',' varref .

    $default  reduce using rule 56 (varlist)


State 85

   27 a_expr: a_expr . T_ADD a_term
   28       | a_expr . T_SUB a_term
   58 expr_list: a_expr ',' a_expr .

    T_ADD  shift, and go to state 50
    T_SUB  shift, and go to state 51

    $default  reduce using rule 58 (expr_list)


State 86

   23 if_stmt: T_IF '(' l_expr ')' . T_THEN stmt else_stmt

    T_THEN  shift, and go to state 87


State 87

   23 if_stmt: T_IF '(' l_expr ')' T_THEN . stmt else_stmt

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 2
    T_SUB          shift, and go to state 3
    T_READ         shift, and go to state 4
    T_WRITE        shift, and go to state 5
    T_BEGIN        shift, and go to state 6
    T_FOREACH      shift, and go to state 7
    T_IN           shift, and go to state 8
    T_REPEAT       shift, and go to state 9
    T_UNTIL        shift, and go to state 10
    T_WHILE        shift, and go to state 11
    T_IF           shift, and go to state 12
    T_LITERAL_STR  shift, and go to state 13
    '('            shift, and go to state 14
    '['            shift, and go to state 15

    stmt_list   go to state 74
    stmt        go to state 88
    block       go to state 19
    foreach     go to state 20
    while       go to state 21
    repeat      go to state 22
    if_stmt     go to state 23
    assignment  go to state 24
    a_expr      go to state 25
    a_term      go to state 26
    a_fact      go to state 27
    varref      go to state 28
    l_expr      go to state 29
    l_term      go to state 30
    l_fact      go to state 31
    read        go to state 32
    write       go to state 33


State 88

    3 stmt_list: stmt .
   16 foreach: stmt .
   23 if_stmt: T_IF '(' l_expr ')' T_THEN stmt . else_stmt

    T_ELSE  shift, and go to state 89

    T_END     reduce using rule 3 (stmt_list)
    T_END     [reduce using rule 16 (foreach)]
    T_END     [reduce using rule 25 (else_stmt)]
    T_ELSE    [reduce using rule 3 (stmt_list)]
    T_ELSE    [reduce using rule 16 (foreach)]
    T_ELSE    [reduce using rule 25 (else_stmt)]
    ';'       reduce using rule 3 (stmt_list)
    ';'       [reduce using rule 16 (foreach)]
    ';'       [reduce using rule 25 (else_stmt)]
    $default  reduce using rule 3 (stmt_list)

    else_stmt  go to state 90


State 89

   24 else_stmt: T_ELSE . stmt

    T_ID           shift, and go to state 1
    T_NUM          shift, and go to state 2
    T_SUB          shift, and go to state 3
    T_READ         shift, and go to state 4
    T_WRITE        shift, and go to state 5
    T_BEGIN        shift, and go to state 6
    T_FOREACH      shift, and go to state 7
    T_IN           shift, and go to state 8
    T_REPEAT       shift, and go to state 9
    T_UNTIL        shift, and go to state 10
    T_WHILE        shift, and go to state 11
    T_IF           shift, and go to state 12
    T_LITERAL_STR  shift, and go to state 13
    '('            shift, and go to state 14
    '['            shift, and go to state 15

    stmt_list   go to state 74
    stmt        go to state 91
    block       go to state 19
    foreach     go to state 20
    while       go to state 21
    repeat      go to state 22
    if_stmt     go to state 23
    assignment  go to state 24
    a_expr      go to state 25
    a_term      go to state 26
    a_fact      go to state 27
    varref      go to state 28
    l_expr      go to state 29
    l_term      go to state 30
    l_fact      go to state 31
    read        go to state 32
    write       go to state 33


State 90

   23 if_stmt: T_IF '(' l_expr ')' T_THEN stmt else_stmt .

    $default  reduce using rule 23 (if_stmt)


State 91

    3 stmt_list: stmt .
   16 foreach: stmt .
   24 else_stmt: T_ELSE stmt .

    T_END     reduce using rule 3 (stmt_list)
    T_END     [reduce using rule 16 (foreach)]
    T_END     [reduce using rule 24 (else_stmt)]
    T_ELSE    reduce using rule 3 (stmt_list)
    T_ELSE    [reduce using rule 16 (foreach)]
    T_ELSE    [reduce using rule 24 (else_stmt)]
    ';'       reduce using rule 3 (stmt_list)
    ';'       [reduce using rule 16 (foreach)]
    ';'       [reduce using rule 24 (else_stmt)]
    $default  reduce using rule 3 (stmt_list)
